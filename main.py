import numpy as np
import time 
import matplotlib.pyplot as plt
from mesh_basis_analysis import Mesh_Basis_Analysis
from analytical_integration import Analytical_Integration
from impedance_forcing_vector import Impedance_Forcing_Vector
from matrix_solver import MatrixSolver
from scatter_field import Scatter_Field

if __name__ == "__main__":    
    degree_m = int(input("Enter the degree of the Gaussian quadrature rule (1-7): "))
    degree_n = degree_m 
    file_path = 'E:\MNIT_Internship\SampleMesh.msh'
    #file_path = 'E:\MNIT_Internship\Sphere560.msh'
    #file_path = 'E:\MNIT_Internship\Sphere1032.msh'
    
    quadrature_rules = {
            1: {
                'points': np.array([
                    [0.333333333333333, 0.333333333333333]
                ]),
                'weights': np.array([0.5])
            },
            2: {
                'points': np.array([
                    [0.166666666666667, 0.166666666666667],
                    [0.666666666666667, 0.166666666666667],
                    [0.166666666666667, 0.666666666666667]
                ]),
                'weights': np.array([0.166666666666667, 0.166666666666667, 0.166666666666667])
            },
            3: {
                'points': np.array([
                    [0.333333333333333, 0.333333333333333], 
                    [0.600000000000000, 0.200000000000000],
                    [0.200000000000000, 0.600000000000000],
                    [0.200000000000000, 0.200000000000000]
                ]),
                'weights': np.array([-0.28125, 0.2604166666666665,0.2604166666666665, 0.2604166666666665])
            },
            4: {
                'points': np.array([
                    [0.108103018168070, 0.445948490915965], 
                    [0.445948490915965, 0.108103018168070], 
                    [0.445948490915965, 0.445948490915965],
                    [0.816847572980459, 0.091576213509771], 
                    [0.091576213509771, 0.816847572980459], 
                    [0.091576213509771, 0.091576213509771]
                ]),
                'weights': np.array([
                    0.1116907948390055, 0.1116907948390055, 0.1116907948390055,
                    0.054975871827661, 0.054975871827661, 0.054975871827661
                ])
            },
            5: {
                'points': np.array([
                    [0.333333333333333, 0.333333333333333],
                    [0.059715871789770, 0.470142064105115], 
                    [0.470142064105115, 0.059715871789770], 
                    [0.470142064105115, 0.470142064105115],
                    [0.797426985353087, 0.101286507323456], 
                    [0.101286507323456, 0.797426985353087], 
                    [0.101286507323456, 0.101286507323456]
                ]),
                'weights': np.array([
                    0.1125, 0.066197076394253, 0.066197076394253, 0.066197076394253,
                    0.0629695902724135, 0.0629695902724135, 0.0629695902724135
                ])
            },
            6: {
                'points': np.array([
                    [0.501426509658179, 0.249286745170910], 
                    [0.249286745170910, 0.501426509658179], 
                    [0.249286745170910, 0.249286745170910],
                    [0.873821971016996, 0.063089014491502], 
                    [0.063089014491502, 0.873821971016996], 
                    [0.063089014491502, 0.063089014491502],
                    [0.053145049844817, 0.310352451033784], 
                    [0.053145049844817, 0.636502499121399], 
                    [0.310352451033784, 0.053145049844817], 
                    [0.310352451033784, 0.636502499121399], 
                    [0.636502499121399, 0.053145049844817], 
                    [0.636502499121399, 0.310352451033784]
                ]),
                'weights': np.array([
                    0.0583931378631895, 0.0583931378631895, 0.0583931378631895,
                    0.0254224531851035, 0.0254224531851035, 0.0254224531851035,
                    0.041425537809187, 0.041425537809187, 0.041425537809187, 
                    0.041425537809187, 0.041425537809187, 0.041425537809187
                ])
            },
            7: {
                'points': np.array([
                    [0.333333333333333, 0.333333333333333],
                    [0.479308067841920, 0.260345966079040], 
                    [0.260345966079040, 0.479308067841920], 
                    [0.260345966079040, 0.260345966079040],
                    [0.869739794195568, 0.065130102902216], 
                    [0.065130102902216, 0.869739794195568], 
                    [0.065130102902216, 0.065130102902216],
                    [0.048690315425316, 0.312865496004874], 
                    [0.048690315425316, 0.638444188569810], 
                    [0.312865496004874, 0.048690315425316], 
                    [0.312865496004874, 0.638444188569810], 
                    [0.638444188569810, 0.048690315425316], 
                    [0.638444188569810, 0.312865496004874]
                ]),
                'weights': np.array([
                    -0.074785022233841, 0.087807628716604, 0.087807628716604, 0.087807628716604,
                    0.026673617804419, 0.026673617804419, 0.026673617804419,
                    0.038556880445129, 0.038556880445129, 0.038556880445129, 
                    0.038556880445129, 0.038556880445129, 0.038556880445129
                ])
            }
        }
    ob_points = [
                [ 1.00000000e+02  ,0.00000000e+00,  9.94837674e-05],
                [ 9.99847695e+01  ,0.00000000e+00,  1.74524064e+00],
                [ 9.99390827e+01  ,0.00000000e+00,  3.48994967e+00],
                [ 9.98629535e+01  ,0.00000000e+00,  5.23359562e+00],
                [ 9.97564050e+01  ,0.00000000e+00,  6.97564737e+00],
                [ 9.96194698e+01  ,0.00000000e+00,  8.71557427e+00],
                [ 9.94521895e+01  ,0.00000000e+00,  1.04528463e+01],
                [ 9.92546152e+01  ,0.00000000e+00,  1.21869343e+01],
                [ 9.90268069e+01  ,0.00000000e+00,  1.39173101e+01],
                [ 9.87688341e+01  ,0.00000000e+00,  1.56434465e+01],
                [ 9.84807753e+01  ,0.00000000e+00,  1.73648178e+01],
                [ 9.81627183e+01  ,0.00000000e+00,  1.90808995e+01],
                [ 9.78147601e+01  ,0.00000000e+00,  2.07911691e+01],
                [ 9.74370065e+01  ,0.00000000e+00,  2.24951054e+01],
                [ 9.70295726e+01  ,0.00000000e+00,  2.41921896e+01],
                [ 9.65925826e+01  ,0.00000000e+00,  2.58819045e+01],
                [ 9.61261696e+01  ,0.00000000e+00,  2.75637356e+01],
                [ 9.56304756e+01  ,0.00000000e+00,  2.92371705e+01],
                [ 9.51056516e+01  ,0.00000000e+00,  3.09016994e+01],
                [ 9.45518576e+01  ,0.00000000e+00,  3.25568154e+01],
                [ 9.39692621e+01  ,0.00000000e+00,  3.42020143e+01],
                [ 9.33580426e+01  ,0.00000000e+00,  3.58367950e+01],
                [ 9.27183855e+01  ,0.00000000e+00,  3.74606593e+01],
                [ 9.20504853e+01  ,0.00000000e+00,  3.90731128e+01],
                [ 9.13545458e+01  ,0.00000000e+00,  4.06736643e+01],
                [ 9.06307787e+01  ,0.00000000e+00,  4.22618262e+01],
                [ 8.98794046e+01  ,0.00000000e+00,  4.38371147e+01],
                [ 8.91006524e+01  ,0.00000000e+00,  4.53990500e+01],
                [ 8.82947593e+01  ,0.00000000e+00,  4.69471563e+01],
                [ 8.74619707e+01  ,0.00000000e+00,  4.84809620e+01],
                [ 8.66025404e+01  ,0.00000000e+00,  5.00000000e+01],
                [ 8.57167301e+01  ,0.00000000e+00,  5.15038075e+01],
                [ 8.48048096e+01  ,0.00000000e+00,  5.29919264e+01],
                [ 8.38670568e+01  ,0.00000000e+00,  5.44639035e+01],
                [ 8.29037573e+01  ,0.00000000e+00,  5.59192903e+01],
                [ 8.19152044e+01  ,0.00000000e+00,  5.73576436e+01],
                [ 8.09016994e+01  ,0.00000000e+00,  5.87785252e+01],
                [ 7.98635510e+01  ,0.00000000e+00,  6.01815023e+01],
                [ 7.88010754e+01  ,0.00000000e+00,  6.15661475e+01],
                [ 7.77145961e+01  ,0.00000000e+00,  6.29320391e+01],
                [ 7.66044443e+01  ,0.00000000e+00,  6.42787610e+01],
                [ 7.54709580e+01  ,0.00000000e+00,  6.56059029e+01],
                [ 7.43144825e+01  ,0.00000000e+00,  6.69130606e+01],
                [ 7.31353702e+01  ,0.00000000e+00,  6.81998360e+01],
                [ 7.19339800e+01  ,0.00000000e+00,  6.94658370e+01],
                [ 7.07106781e+01  ,0.00000000e+00,  7.07106781e+01],
                [ 6.94658370e+01  ,0.00000000e+00,  7.19339800e+01],
                [ 6.81998360e+01  ,0.00000000e+00,  7.31353702e+01],
                [ 6.69130606e+01  ,0.00000000e+00,  7.43144825e+01],
                [ 6.56059029e+01  ,0.00000000e+00,  7.54709580e+01],
                [ 6.42787610e+01  ,0.00000000e+00,  7.66044443e+01],
                [ 6.29320391e+01  ,0.00000000e+00,  7.77145961e+01],
                [ 6.15661475e+01  ,0.00000000e+00,  7.88010754e+01],
                [ 6.01815023e+01  ,0.00000000e+00,  7.98635510e+01],
                [ 5.87785252e+01  ,0.00000000e+00,  8.09016994e+01],
                [ 5.73576436e+01  ,0.00000000e+00,  8.19152044e+01],
                [ 5.59192903e+01  ,0.00000000e+00,  8.29037573e+01],
                [ 5.44639035e+01  ,0.00000000e+00,  8.38670568e+01],
                [ 5.29919264e+01  ,0.00000000e+00,  8.48048096e+01],
                [ 5.15038075e+01  ,0.00000000e+00,  8.57167301e+01],
                [ 5.00000000e+01  ,0.00000000e+00,  8.66025404e+01],
                [ 4.84809620e+01  ,0.00000000e+00,  8.74619707e+01],
                [ 4.69471563e+01  ,0.00000000e+00,  8.82947593e+01],
                [ 4.53990500e+01  ,0.00000000e+00,  8.91006524e+01],
                [ 4.38371147e+01  ,0.00000000e+00,  8.98794046e+01],
                [ 4.22618262e+01  ,0.00000000e+00,  9.06307787e+01],
                [ 4.06736643e+01  ,0.00000000e+00,  9.13545458e+01],
                [ 3.90731128e+01  ,0.00000000e+00,  9.20504853e+01],
                [ 3.74606593e+01  ,0.00000000e+00,  9.27183855e+01],
                [ 3.58367950e+01  ,0.00000000e+00,  9.33580426e+01],
                [ 3.42020143e+01  ,0.00000000e+00,  9.39692621e+01],
                [ 3.25568154e+01  ,0.00000000e+00,  9.45518576e+01],
                [ 3.09016994e+01  ,0.00000000e+00,  9.51056516e+01],
                [ 2.92371705e+01  ,0.00000000e+00,  9.56304756e+01],
                [ 2.75637356e+01  ,0.00000000e+00,  9.61261696e+01],
                [ 2.58819045e+01  ,0.00000000e+00,  9.65925826e+01],
                [ 2.41921896e+01  ,0.00000000e+00,  9.70295726e+01],
                [ 2.24951054e+01  ,0.00000000e+00,  9.74370065e+01],
                [ 2.07911691e+01  ,0.00000000e+00,  9.78147601e+01],
                [ 1.90808995e+01  ,0.00000000e+00,  9.81627183e+01],
                [ 1.73648178e+01  ,0.00000000e+00,  9.84807753e+01],
                [ 1.56434465e+01  ,0.00000000e+00,  9.87688341e+01],
                [ 1.39173101e+01  ,0.00000000e+00,  9.90268069e+01],
                [ 1.21869343e+01  ,0.00000000e+00,  9.92546152e+01],
                [ 1.04528463e+01  ,0.00000000e+00,  9.94521895e+01],
                [ 8.71557427e+00  ,0.00000000e+00,  9.96194698e+01],
                [ 6.97564737e+00  ,0.00000000e+00,  9.97564050e+01],
                [ 5.23359562e+00  ,0.00000000e+00,  9.98629535e+01],
                [ 3.48994967e+00  ,0.00000000e+00,  9.99390827e+01],
                [ 1.74524064e+00  ,0.00000000e+00,  9.99847695e+01],
                [ 6.12323400e-15  ,0.00000000e+00,  1.00000000e+02],
                [-1.74524064e+00  ,0.00000000e+00,  9.99847695e+01],
                [-3.48994967e+00  ,0.00000000e+00,  9.99390827e+01],
                [-5.23359562e+00  ,0.00000000e+00,  9.98629535e+01],
                [-6.97564737e+00  ,0.00000000e+00,  9.97564050e+01],
                [-8.71557427e+00  ,0.00000000e+00,  9.96194698e+01],
                [-1.04528463e+01  ,0.00000000e+00,  9.94521895e+01],
                [-1.21869343e+01  ,0.00000000e+00,  9.92546152e+01],
                [-1.39173101e+01  ,0.00000000e+00,  9.90268069e+01],
                [-1.56434465e+01  ,0.00000000e+00,  9.87688341e+01],
                [-1.73648178e+01  ,0.00000000e+00,  9.84807753e+01],
                [-1.90808995e+01  ,0.00000000e+00,  9.81627183e+01],
                [-2.07911691e+01  ,0.00000000e+00,  9.78147601e+01],
                [-2.24951054e+01  ,0.00000000e+00,  9.74370065e+01],
                [-2.41921896e+01  ,0.00000000e+00,  9.70295726e+01],
                [-2.58819045e+01  ,0.00000000e+00,  9.65925826e+01],
                [-2.75637356e+01  ,0.00000000e+00,  9.61261696e+01],
                [-2.92371705e+01  ,0.00000000e+00,  9.56304756e+01],
                [-3.09016994e+01  ,0.00000000e+00,  9.51056516e+01],
                [-3.25568154e+01  ,0.00000000e+00,  9.45518576e+01],
                [-3.42020143e+01  ,0.00000000e+00,  9.39692621e+01],
                [-3.58367950e+01  ,0.00000000e+00,  9.33580426e+01],
                [-3.74606593e+01  ,0.00000000e+00,  9.27183855e+01],
                [-3.90731128e+01  ,0.00000000e+00,  9.20504853e+01],
                [-4.06736643e+01  ,0.00000000e+00,  9.13545458e+01],
                [-4.22618262e+01  ,0.00000000e+00,  9.06307787e+01],
                [-4.38371147e+01  ,0.00000000e+00,  8.98794046e+01],
                [-4.53990500e+01  ,0.00000000e+00,  8.91006524e+01],
                [-4.69471563e+01  ,0.00000000e+00,  8.82947593e+01],
                [-4.84809620e+01  ,0.00000000e+00,  8.74619707e+01],
                [-5.00000000e+01  ,0.00000000e+00,  8.66025404e+01],
                [-5.15038075e+01  ,0.00000000e+00,  8.57167301e+01],
                [-5.29919264e+01  ,0.00000000e+00,  8.48048096e+01],
                [-5.44639035e+01  ,0.00000000e+00,  8.38670568e+01],
                [-5.59192903e+01  ,0.00000000e+00,  8.29037573e+01],
                [-5.73576436e+01  ,0.00000000e+00,  8.19152044e+01],
                [-5.87785252e+01  ,0.00000000e+00,  8.09016994e+01],
                [-6.01815023e+01  ,0.00000000e+00,  7.98635510e+01],
                [-6.15661475e+01  ,0.00000000e+00,  7.88010754e+01],
                [-6.29320391e+01  ,0.00000000e+00,  7.77145961e+01],
                [-6.42787610e+01  ,0.00000000e+00,  7.66044443e+01],
                [-6.56059029e+01  ,0.00000000e+00,  7.54709580e+01],
                [-6.69130606e+01  ,0.00000000e+00,  7.43144825e+01],
                [-6.81998360e+01  ,0.00000000e+00,  7.31353702e+01],
                [-6.94658370e+01  ,0.00000000e+00,  7.19339800e+01],
                [-7.07106781e+01  ,0.00000000e+00,  7.07106781e+01],
                [-7.19339800e+01  ,0.00000000e+00,  6.94658370e+01],
                [-7.31353702e+01  ,0.00000000e+00,  6.81998360e+01],
                [-7.43144825e+01  ,0.00000000e+00,  6.69130606e+01],
                [-7.54709580e+01  ,0.00000000e+00,  6.56059029e+01],
                [-7.66044443e+01  ,0.00000000e+00,  6.42787610e+01],
                [-7.77145961e+01  ,0.00000000e+00,  6.29320391e+01],
                [-7.88010754e+01  ,0.00000000e+00,  6.15661475e+01],
                [-7.98635510e+01  ,0.00000000e+00,  6.01815023e+01],
                [-8.09016994e+01  ,0.00000000e+00,  5.87785252e+01],
                [-8.19152044e+01  ,0.00000000e+00,  5.73576436e+01],
                [-8.29037573e+01  ,0.00000000e+00,  5.59192903e+01],
                [-8.38670568e+01  ,0.00000000e+00,  5.44639035e+01],
                [-8.48048096e+01  ,0.00000000e+00,  5.29919264e+01],
                [-8.57167301e+01  ,0.00000000e+00,  5.15038075e+01],
                [-8.66025404e+01  ,0.00000000e+00,  5.00000000e+01],
                [-8.74619707e+01  ,0.00000000e+00,  4.84809620e+01],
                [-8.82947593e+01  ,0.00000000e+00,  4.69471563e+01],
                [-8.91006524e+01  ,0.00000000e+00,  4.53990500e+01],
                [-8.98794046e+01  ,0.00000000e+00,  4.38371147e+01],
                [-9.06307787e+01  ,0.00000000e+00,  4.22618262e+01],
                [-9.13545458e+01  ,0.00000000e+00,  4.06736643e+01],
                [-9.20504853e+01  ,0.00000000e+00,  3.90731128e+01],
                [-9.27183855e+01  ,0.00000000e+00,  3.74606593e+01],
                [-9.33580426e+01  ,0.00000000e+00,  3.58367950e+01],
                [-9.39692621e+01  ,0.00000000e+00,  3.42020143e+01],
                [-9.45518576e+01  ,0.00000000e+00,  3.25568154e+01],
                [-9.51056516e+01  ,0.00000000e+00,  3.09016994e+01],
                [-9.56304756e+01  ,0.00000000e+00,  2.92371705e+01],
                [-9.61261696e+01  ,0.00000000e+00,  2.75637356e+01],
                [-9.65925826e+01  ,0.00000000e+00,  2.58819045e+01],
                [-9.70295726e+01  ,0.00000000e+00,  2.41921896e+01],
                [-9.74370065e+01  ,0.00000000e+00,  2.24951054e+01],
                [-9.78147601e+01  ,0.00000000e+00,  2.07911691e+01],
                [-9.81627183e+01  ,0.00000000e+00,  1.90808995e+01],
                [-9.84807753e+01  ,0.00000000e+00,  1.73648178e+01],
                [-9.87688341e+01  ,0.00000000e+00,  1.56434465e+01],
                [-9.90268069e+01  ,0.00000000e+00,  1.39173101e+01],
                [-9.92546152e+01  ,0.00000000e+00,  1.21869343e+01],
                [-9.94521895e+01  ,0.00000000e+00,  1.04528463e+01],
                [-9.96194698e+01  ,0.00000000e+00,  8.71557427e+00],
                [-9.97564050e+01  ,0.00000000e+00,  6.97564737e+00],
                [-9.98629535e+01  ,0.00000000e+00,  5.23359562e+00],
                [-9.99390827e+01  ,0.00000000e+00,  3.48994967e+00],
                [-9.99847695e+01  ,0.00000000e+00,  1.74524064e+00],
                [-1.00000000e+02  ,0.00000000e+00,  9.94837674e-05],
                ]
    # Degrees at which we need the points
    degrees = np.array([0.000057, 1.000000, 2.000000, 3.000000, 4.000000, 5.000000, 6.000000, 7.000000, 
                    8.000000, 9.000000, 10.000000, 11.000000, 12.000000, 13.000000, 14.000000, 
                    15.000000, 16.000000, 17.000000, 18.000000, 19.000000, 20.000000, 21.000000, 
                    22.000000, 23.000000, 24.000000, 25.000000, 26.000000, 27.000000, 28.000000, 
                    29.000000, 30.000000, 31.000000, 32.000000, 33.000000, 34.000000, 35.000000, 
                    36.000000, 37.000000, 38.000000, 39.000000, 40.000000, 41.000000, 42.000000, 
                    43.000000, 44.000000, 45.000000, 46.000000, 47.000000, 48.000000, 49.000000, 
                    50.000000, 51.000000, 52.000000, 53.000000, 54.000000, 55.000000, 56.000000, 
                    57.000000, 58.000000, 59.000000, 60.000000, 61.000000, 62.000000, 63.000000, 
                    64.000000, 65.000000, 66.000000, 67.000000, 68.000000, 69.000000, 70.000000, 
                    71.000000, 72.000000, 73.000000, 74.000000, 75.000000, 76.000000, 77.000000, 
                    78.000000, 79.000000, 80.000000, 81.000000, 82.000000, 83.000000, 84.000000, 
                    85.000000, 86.000000, 87.000000, 88.000000, 89.000000, 90.000000, 91.000000, 
                    92.000000, 93.000000, 94.000000, 95.000000, 96.000000, 97.000000, 98.000000, 
                    99.000000, 100.000000, 101.000000, 102.000000, 103.000000, 104.000000, 
                    105.000000, 106.000000, 107.000000, 108.000000, 109.000000, 110.000000, 
                    111.000000, 112.000000, 113.000000, 114.000000, 115.000000, 116.000000, 
                    117.000000, 118.000000, 119.000000, 120.000000, 121.000000, 122.000000, 
                    123.000000, 124.000000, 125.000000, 126.000000, 127.000000, 128.000000, 
                    129.000000, 130.000000, 131.000000, 132.000000, 133.000000, 134.000000, 
                    135.000000, 136.000000, 137.000000, 138.000000, 139.000000, 140.000000, 
                    141.000000, 142.000000, 143.000000, 144.000000, 145.000000, 146.000000, 
                    147.000000, 148.000000, 149.000000, 150.000000, 151.000000, 152.000000, 
                    153.000000, 154.000000, 155.000000, 156.000000, 157.000000, 158.000000, 
                    159.000000, 160.000000, 161.000000, 162.000000, 163.000000, 164.000000, 
                    165.000000, 166.000000, 167.000000, 168.000000, 169.000000, 170.000000, 
                    171.000000, 172.000000, 173.000000, 174.000000, 175.000000, 176.000000, 
                    177.000000, 178.000000, 179.000000, 179.999943])
    w = w = 2 * np.pi * 1e7
    [k_x , k_y , k_z] = [1,0,0]
    K = np.array([k_x , k_y , k_z]) # Captital K is used
    [E_x , E_y , E_z] = [1,0,0]
    E_inc = np.array([E_x , E_y , E_z])
    field_parameter = {'ang_frequency' : w ,'propagation_vector': K ,'E_incident':E_inc}

    mu_relative = 1
    epsilon_relative = 1
    k = w * np.sqrt(mu_relative * epsilon_relative) * 3.33e-9
    medium_parameter = {'relative_permiability': mu_relative ,'relative_permitivity': epsilon_relative ,'wave_number' : k}
    
    # Start measuring time
    start_time = time.time()
    
    mesh_basis_analysis = Mesh_Basis_Analysis(file_path, quadrature_rules, degree_m)
    mesh_basis_analysis.run_analysis()
    impedance_forcing_vector = Impedance_Forcing_Vector(mesh_basis_analysis, degree_m, degree_n, quadrature_rules, medium_parameter, field_parameter)
    potential_values,impedance_matrix,forcing_vector = impedance_forcing_vector.integrate()  
    solver = MatrixSolver(impedance_matrix, forcing_vector)
    I = solver.solve()
    y_data = []
    for i in range(180):
        scatter_field = Scatter_Field(mesh_basis_analysis, degree_m, degree_n, quadrature_rules, medium_parameter, field_parameter, I, ob_points[i])
        E_scat = scatter_field.integrate()
        y_data.append(E_scat)

    E_theta_magnitude = []
    for i, E_cartesian in enumerate(y_data):
        x, y, z = E_cartesian
        theta = np.deg2rad(degrees[i])
        E_theta = x * np.cos(theta) - z * np.sin(theta)
        E_theta_magnitude.append(np.abs(E_theta))  # Magnitude of E_theta

    # Convert E_theta_magnitude to a suitable format if needed (e.g., list or numpy array)
    E_theta_magnitude = np.array(E_theta_magnitude)

    # Plot degree vs E_theta_magnitude
    degrees = np.arange(180)  # Assuming degrees from 0 to 179

    plt.figure(figsize=(10, 6))
    plt.plot(degrees, E_theta_magnitude, label='E_theta magnitude', color='b')
    plt.xlabel('Degree')
    plt.ylabel('E_theta Magnitude')
    plt.title('Degree vs E_theta Magnitude')
    plt.legend()
    plt.grid(True)
    plt.show()
    
    # End measuring time
    end_time = time.time()
    
    # Calculate and print the time taken
    execution_time = end_time - start_time
    print("Time taken:", execution_time, "seconds")
    # Print or use the solution vector I
    #print("Solution vector I:")
    #print(I.flatten())  # Convert to 1D array and print
    #print(y_data)
